#!/bin/bash -e

tmpfile=/tmp/tron.txt
njobs=4
game=icosahedron
count=1000

declare -a players wins
argc=0

usage() {
	echo "Usage: $0 [options] player1 [player2 ...]

Options:
    -c N, --count N          Number of games to do
    -g GAME, --game GAME     Name of the game config to use
    -j N, --jobs N           Number of jobs to spawn
"
	exit 0
}

while [ -n "$1" ]; do
	case "$1" in
		-c|--count) count=$2; shift 2 ;;
		-g|--game) game=$2; shift 2 ;;
		-j|--jobs) njobs=$2; shift 2 ;;
		-h|--help) usage; exit 0 ;;
		-*) echo "Invalid option: $1"; exit 1 ;;
		*) players[argc]=$1; argc=$(($argc+1)); shift ;;
	esac
done
game_p=${game}.gam

nplayers=$(sed -n 's/^nb_players.*\([0-9]\+\)/\1/p' $game_p)
if [ $argc -eq 0 ]; then
	usage
	exit 0
elif [ ! $argc -eq $nplayers ]; then
	echo "$nplayers players required, $argc provided"
	exit 2
fi

i=0
for p in ${players[@]}; do
	wins[$i]=0
	i=$(($i+1))
done
ls $game_p &>/dev/null || { echo "No such game: $game"; exit 2; }
: > $tmpfile

i_todo=$(( ($count/$njobs)+1 ))
i_done=0
n0=1
n1=$nplayers
for (( b=0; b<$i_todo; b++ )); do
	for (( i=0; i<$njobs; i++ )); do
		j=$(($i_done+$i))
		[ $j -ge $count ] && break
		./Game ${players[@]:$n1} ${players[@]:0:$n1} -s $RANDOM < $game_p 2>/dev/null |\
			grep '^score ' | tail -n 1 | (read -a result;\
				echo ${result[@]:$n0} ${result[@]:1:$(($n0-1))} ) >> $tmpfile &
		n0=$(($n0+1))
		n1=$(($n1-1))
		[ $n0 -gt $nplayers ] && { n0=1; n1=$nplayers; }
	done
	wait
	i_done=$(($i_done+$i))
	echo -en "\r$i_done ($(($i_done*100/$count))%)"
done

echo
echo "Ran $i_done $game games"

max() {
	imax=0
	vmax=-1
	i=0
	for v in $@; do
		[ $v -eq $vmax ] && return
		[ $v -gt $vmax ] && { imax=$i; vmax=$v; }
		i=$(($i+1))
	done
	echo -n $imax
}

while read result; do
	if [ -n "$result" ]; then
		winner=$(max $result)
		[ -n "$winner" ] && wins[$winner]=$(( ${wins[$winner]} + 1 ))
	fi
	echo -en "\r${wins[@]}"
done < $tmpfile
echo

i=0
for c in ${wins[@]}; do
	percent=$( bc -l <<< "scale=3; ($c*100) / $count" )
	echo -e "${players[i]}:\t$percent"
	i=$(($i+1))
done
